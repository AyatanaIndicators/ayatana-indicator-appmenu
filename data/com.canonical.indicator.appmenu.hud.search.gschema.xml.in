<schemalist>
	<schema id="com.canonical.indicator.appmenu.hud.search" path="/com/canonical/indicator/appmenu/hud/search/" gettext-domain="indicator-appmenu">
		<key name="indicator-penalty" type="u">
			<default>50</default>
			<_summary>The penalty given to a menu item being in an indicator</_summary>
			<_description>
				In order to have the application's menu items appear higher
				in the search results a slight penalty is given to the indicator
				menu items.  This value represents then percentage of that peanlty
				so a value of '50' is a 50% additional to the calculated distance.
			</_description>
		</key>
		<key name="add-penalty" type="u">
			<default>10</default>
			<_summary>Penalty for extra characters added to the search</_summary>
			<_description>
				Penalty applied for extra characters that are added on the end of
				the string that are not related to the source string.
			</_description>
		</key>
		<key name="add-penalty-pre" type="u">
			<default>1</default>
			<_summary>Penalty for extra characters added to the search before the length of the search string</_summary>
			<_description>
				Extra characters that occur before the length of the search string
				could cover them get this penalty.  In the case of "return" and
				a search string of "turn" the 'r' and the 'e' would get hit with
				this penalty.
			</_description>
		</key>
		<key name="drop-penalty" type="u">
			<default>10</default>
			<_summary>Penalty applied if a character is dropped</_summary>
			<_description>
				The penalty applied for characters that were dropped off the end
				of the search string compared to the tested string.  This is mostly
				used for seeding and creating a max gradient on the edge of the
				matrix, as mostly dropped single characters are covered by the
				'drop-penalty-end' value.
			</_description>
		</key>
		<key name="drop-penalty-end" type="u">
			<default>10</default>
			<_summary>Penalty applied if a character is dropped after the search string length</_summary>
			<_description>
				Drop penalty that is added to characters that are longer than the
				current search string.  So for a search string of "add" and a source
				string of "added" there would be drop end penalties for both 'e' and
				'd'.
			</_description>
		</key>
		<key name="transpose-penalty" type="u">
			<default>10</default>
			<_summary>Penalty applied when characters are transposed</_summary>
			<_description>
				When two characters are transposed this penalty is applied.  This is
				for values like "ea" when the correct value is "ae".  This penalty should
				be less than twice the swap penalty to have any effect.
			</_description>
		</key>
		<key name="swap-penalty" type="u">
			<default>10</default>
			<_summary>Penalty applied when the characters are not the same</_summary>
			<_description>
				When two characters don't match at all this is the penalty
				that is given.  This should probably be the highest penalty
				in the set of all the values.
			</_description>
		</key>
		<key name="swap-penalty-case" type="u">
			<default>1</default>
			<_summary>The swap penalty when the swap is a case change</_summary>
			<_description>
				While not strictly a swap, this value allows for penalizing
				the search slightly when the only difference between the
				characters is in its case.  For instance, 'c' vs. 'C'.
			</_description>
		</key>
		<key name="max-distance" type="u">
			<default>30</default>
			<_summary>The highest distance value that is shown in the results</_summary>
			<_description>
				After the distances are calculated (including the indicator
				penalty) then all values above this max are dropped.  This
				means that the history for those entries aren't looked up
				as well.
			</_description>
		</key>
	</schema>
</schemalist>
